################################################################################
#                                                                              #
#      IAR Universal Linker V6.4.6.89                                          #
#                                                                              #
#           Link time     =  25/Aug/2023  15:36:35                             #
#           Target CPU    =  x51                                               #
#           List file     =  C:\Users\31770\Documents\CC2530\project\Debug\Lis #
#                            t\HAL.map                                         #
#           Output file 1 =  C:\Users\31770\Documents\CC2530\project\Debug\Exe #
#                            \HAL.hex                                          #
#                            Format: intel-extended                            #
#           Output file 2 =  C:\Users\31770\Documents\CC2530\project\Debug\Exe #
#                            \HAL.d51                                          #
#                            Format: ubrof10                                   #
#                            UBROF version 10.0.6                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  -f C:\Users\31770\AppData\Local\Temp\EW6B57.tmp   #
#                            (C:\Users\31770\Documents\CC2530\project\Debug\Ob #
#                            j\cc2530_hal_SPI.r51                              #
#                            C:\Users\31770\Documents\CC2530\project\Debug\Obj #
#                            \main.r51                                         #
#                            -o                                                #
#                            C:\Users\31770\Documents\CC2530\project\Debug\Exe #
#                            \HAL.d51                                          #
#                            -l                                                #
#                            C:\Users\31770\Documents\CC2530\project\Debug\Lis #
#                            t\HAL.map                                         #
#                            -xms                                              #
#                            "-ID:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 8.0\8051\LIB\"                            #
#                            -f                                                #
#                            "D:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.0\8051\config\devices\Texas Instruments\l #
#                            nk51ew_cc2530F256_banked.xcl"                     #
#                            (-D_IDATA0_START=0x00 -D_IDATA0_END=0xFF          #
#                            -D_PDATA0_START=0x1E00 -D_PDATA0_END=0x1EFF       #
#                            -D_IXDATA0_START=0x0001 -D_IXDATA0_END=0x1EFF     #
#                            -D_XDATA0_START=_IXDATA0_START                    #
#                            -D_XDATA0_END=_IXDATA0_END                        #
#                            -D_NEAR_CODE_START=0x0000                         #
#                            -D_FIRST_BANK_ADDR=0x10000 -D?REGISTER_BANK=0x0   #
#                            -D_REGISTER_BANK_START=0x0 -D_BREG_START=0x00     #
#                            -D?VB=0x20 -Z(BIT)BREG=_BREG_START                #
#                            -Z(BIT)BIT_N=0-7F                                 #
#                            -Z(DATA)REGISTERS+8=_REGISTER_BANK_START          #
#                            -Z(DATA)BDATA_Z,BDATA_N,BDATA_I=20-2F             #
#                            -Z(DATA)VREG=08-7F -Z(DATA)PSP,XSP=08-7F          #
#                            -Z(DATA)DOVERLAY=08-7F                            #
#                            -Z(DATA)DATA_I,DATA_Z,DATA_N=08-7F                #
#                            -U(IDATA)0-7F=(DATA)0-7F                          #
#                            -Z(IDATA)IDATA_I,IDATA_Z,IDATA_N=08-_IDATA0_END   #
#                            -Z(IDATA)ISTACK+_IDATA_STACK_SIZE#08-_IDATA0_END  #
#                            -Z(IDATA)IOVERLAY=08-FF -Z(CODE)INTVEC=0          #
#                            -Z(CODE)CSTART=_NEAR_CODE_START-(_CODEBANK_START- #
#                            1)                                                #
#                            -Z(CODE)BIT_ID,BDATA_ID,DATA_ID,IDATA_ID,IXDATA_I #
#                            D,PDATA_ID,XDATA_ID=_NEAR_CODE_START-(_CODEBANK_S #
#                            TART-1)                                           #
#                            -Z(CODE)BANK_RELAYS,RCODE,DIFUNCT,CODE_C,CODE_N,N #
#                            EAR_CODE=_NEAR_CODE_START-(_CODEBANK_START-1)     #
#                            -P(CODE)BANKED_CODE=_NEAR_CODE_START-(_CODEBANK_S #
#                            TART-1),[(_CODEBANK_START+_FIRST_BANK_ADDR)-(_COD #
#                            EBANK_END+_FIRST_BANK_ADDR)]*_NR_OF_BANKS+10000   #
#                            -Z(CODE)CHECKSUM#(_CODEBANK_START-1)              #
#                            -Z(XDATA)PDATA_Z,PDATA_I=_PDATA0_START-_PDATA0_EN #
#                            D                                                 #
#                            -P(XDATA)PDATA_N=_PDATA0_START-_PDATA0_END        #
#                            -Z(XDATA)PSTACK+_PDATA_STACK_SIZE=_PDATA0_START-_ #
#                            PDATA0_END                                        #
#                            -Z(XDATA)EXT_STACK+_EXTENDED_STACK_SIZE=_EXTENDED #
#                            _STACK_START                                      #
#                            -Z(XDATA)XSTACK+_XDATA_STACK_SIZE=_XDATA0_START-_ #
#                            XDATA0_END                                        #
#                            -Z(XDATA)IXDATA_Z,IXDATA_I=_IXDATA0_START-_IXDATA #
#                            0_END                                             #
#                            -P(XDATA)IXDATA_N=_IXDATA0_START-_IXDATA0_END     #
#                            -Z(XDATA)XDATA_Z,XDATA_I=_XDATA0_START-_XDATA0_EN #
#                            D                                                 #
#                            -P(XDATA)XDATA_N=_XDATA0_START-_XDATA0_END        #
#                            -Z(XDATA)XDATA_HEAP+_XDATA_HEAP_SIZE=_XDATA0_STAR #
#                            T-_XDATA0_END                                     #
#                            -Z(CONST)XDATA_ROM_C=_XDATA0_START-_XDATA0_END    #
#                            -cx51                                             #
#                            -M(CODE)[(_CODEBANK_START+_FIRST_BANK_ADDR)-(_COD #
#                            EBANK_END+_FIRST_BANK_ADDR)]*_NR_OF_BANKS+0x10000 #
#                            =0x8000                                           #
#                            -ww69=i -D_BANK0_START=0x00000                    #
#                            -D_BANK0_END=0x07FFF -D_BANK1_START=0x18000       #
#                            -D_BANK1_END=0x1FFFF -D_BANK2_START=0x28000       #
#                            -D_BANK2_END=0x2FFFF -D_BANK3_START=0x38000       #
#                            -D_BANK3_END=0x3FFFF -D_BANK4_START=0x48000       #
#                            -D_BANK4_END=0x4FFFF -D_BANK5_START=0x58000       #
#                            -D_BANK5_END=0x5FFFF -D_BANK6_START=0x68000       #
#                            -D_BANK6_END=0x6FFFF -D_BANK7_START=0x78000       #
#                            -D_BANK7_END=0x7FFFF                              #
#                            -P(CODE)BANK0=_BANK0_START-_BANK0_END             #
#                            -P(CODE)BANK1=_BANK1_START-_BANK1_END             #
#                            -P(CODE)BANK2=_BANK2_START-_BANK2_END             #
#                            -P(CODE)BANK3=_BANK3_START-_BANK3_END             #
#                            -P(CODE)BANK4=_BANK4_START-_BANK4_END             #
#                            -P(CODE)BANK5=_BANK5_START-_BANK5_END             #
#                            -P(CODE)BANK6=_BANK6_START-_BANK6_END             #
#                            -P(CODE)BANK7=_BANK7_START-_BANK7_END             #
#                            -D_FLASH_LOCK_BITS_START=0x7FFF0                  #
#                            -D_FLASH_LOCK_BITS_END=0x7FFFF                    #
#                            -Z(CODE)FLASH_LOCK_BITS=_FLASH_LOCK_BITS_START-_F #
#                            LASH_LOCK_BITS_END                                #
#                            -U(CODE)0x0000=(CODE)_FLASH_LOCK_BITS_START-_FLAS #
#                            H_LOCK_BITS_END)                                  #
#                            -D_NR_OF_VIRTUAL_REGISTERS=8 -D?PBANK=0x93        #
#                            -D?CBANK=0x9F -D?CBANK_MASK=0xFF                  #
#                            -e?BCALL_FF=?BCALL -e?BRET_FF=?BRET               #
#                            -e?BDISPATCH_FF=?BDISPATCH                        #
#                            -D_CODEBANK_START=0x8000 -D_CODEBANK_END=0xFFFF   #
#                            -D_NR_OF_BANKS=0x07                               #
#                            "-ID:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 8.0\8051\CONFIG\"                         #
#                            -rt                                               #
#                            -Ointel-extended=C:\Users\31770\Documents\CC2530\ #
#                            project\Debug\Exe\HAL.hex                         #
#                            -s __program_start                                #
#                            "D:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.0\8051\LIB\DLIB\dl-pli-blxd-1e16x01n.r51" #
#                            -D_IDATA_STACK_SIZE=0x40 -D?ESP=0 -D?ESP_MASK=0   #
#                            -D_EXTENDED_STACK_START=0                         #
#                            -D_EXTENDED_STACK_SIZE=0                          #
#                            -D_PDATA_STACK_SIZE=0x80                          #
#                            -D_XDATA_STACK_SIZE=0x1FF                         #
#                            -D_XDATA_HEAP_SIZE=0xFF -D_FAR_HEAP_SIZE=0xFFF    #
#                            -D_HUGE_HEAP_SIZE=0xFFF                           #
#                            -D_FAR22_HEAP_SIZE=0xFFF)                         #
#                                                                              #
#                           Copyright (C) 1987-2016 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      0000004A  Relocatable, from module : CSTARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __Heap_Handler             = Basic
  __SystemLibrary            = DLib
  __calling_convention       = xdata_reentrant
  __code_model               = banked
  __core                     = plain
  __data_model               = large
  __dlib_file_descriptor     = 0
  __dlib_full_locale_support = 0
  __dptr_size                = 16
  __extended_stack           = disabled
  __location_for_constants   = data
  __number_of_dptrs          = 1
  __register_banks           = *
  __rt_version               = 1

                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

                  There are no automatic symbol redirections.



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FAR22_HEAP_SIZE        00000FFF 
           _HUGE_HEAP_SIZE         00000FFF 
           _FAR_HEAP_SIZE          00000FFF 
           _XDATA_HEAP_SIZE        000000FF 
           _XDATA_STACK_SIZE       000001FF 
           _PDATA_STACK_SIZE       00000080 
           _EXTENDED_STACK_SIZE    00000000 
           _EXTENDED_STACK_START   00000000 
           ?ESP_MASK               00000000 
           ?ESP                    00000000 
           _IDATA_STACK_SIZE       00000040 
           _NR_OF_BANKS            00000007 
           _CODEBANK_END           0000FFFF 
           _CODEBANK_START         00008000 
           ?CBANK_MASK             000000FF 
           ?CBANK                  0000009F        ?RESET_CODE_BANK (CSTARTUP)
                                                   Segment part 0 (?BANKED_CODE_SUPPORT)
           ?PBANK                  00000093 
           _NR_OF_VIRTUAL_REGISTERS
                                   00000008 
           _FLASH_LOCK_BITS_END    0003FFFF 
           _FLASH_LOCK_BITS_START
                                   0003FFF0 
           _BANK7_END              0003FFFF 
           _BANK7_START            00038000 
           _BANK6_END              00037FFF 
           _BANK6_START            00030000 
           _BANK5_END              0002FFFF 
           _BANK5_START            00028000 
           _BANK4_END              00027FFF 
           _BANK4_START            00020000 
           _BANK3_END              0001FFFF 
           _BANK3_START            00018000 
           _BANK2_END              00017FFF 
           _BANK2_START            00010000 
           _BANK1_END              0000FFFF 
           _BANK1_START            00008000 
           _BANK0_END              00007FFF 
           _BANK0_START            00000000 
           ?VB                     00000020        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
           _BREG_START             00000000 
           _REGISTER_BANK_START    00000000 
           ?REGISTER_BANK          00000000        Segment part 6 (CSTARTUP)
           _FIRST_BANK_ADDR        00010000 
           _NEAR_CODE_START        00000000 
           _XDATA0_END             00001EFF 
           _XDATA0_START           00000001 
           _IXDATA0_END            00001EFF 
           _IXDATA0_START          00000001 
           _PDATA0_END             00001EFF 
           _PDATA0_START           00001E00 
           _IDATA0_END             000000FF 
           _IDATA0_START           00000000 
    *************************************************************************

  FILE NAME : C:\Users\31770\Documents\CC2530\project\Debug\Obj\cc2530_hal_SPI.r51
  PROGRAM MODULE, NAME : cc2530_hal_SPI

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000F1 - 000000F1 (0x1 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   SPI_Init_SPI1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PERCFG                  000000F1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F4 - 000000F4 (0x1 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   SPI_Init_SPI1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1SEL                   000000F4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F5 - 000000F5 (0x1 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   SPI_Init_SPI1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2SEL                   000000F5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F8 - 000000F8 (0x1 bytes), align: 0
  Segment part 4. ROOT        Intra module refs:   HWSPI_Send_Byte
                                                   SPI_Init_SPI1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_U1CSR                000000F8 
           LOCAL                   ADDRESS         
           =====                   =======         
           U1CSR                   000000F8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F9 - 000000F9 (0x1 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   HWSPI_Send_Byte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U1DBUF                  000000F9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FA - 000000FA (0x1 bytes), align: 0
  Segment part 6. ROOT        Intra module refs:   SPI_Init_SPI1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U1BAUD                  000000FA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FC - 000000FC (0x1 bytes), align: 0
  Segment part 7. ROOT        Intra module refs:   SPI_Init_SPI1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U1GCR                   000000FC 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000034A - 0000037E (0x35 bytes), align: 0
  Segment part 13.            Intra module refs:   SPI_Init_HW::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPI_Init_HW             0000034A 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000037F - 000003A2 (0x24 bytes), align: 0
  Segment part 15.            Intra module refs:   SPI_Send_Byte::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPI_Send_Byte           0000037F 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000003A3 - 000003E4 (0x42 bytes), align: 0
  Segment part 19.            Intra module refs:   SPI_Init_SPI1::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           SPI_Init_SPI1           000003A3 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000003E5 - 0000040D (0x29 bytes), align: 0
  Segment part 21.            Intra module refs:   HWSPI_Send_Byte::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           HWSPI_Send_Byte         000003E5 
               XSTACK = 0000000A ( 00000000 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000007E - 00000083 (0x6 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPI_Init_HW::?relay     0000007E        displayInit (main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000084 - 00000089 (0x6 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPI_Send_Byte::?relay   00000084        sendCMD (main)
                                                   sendDATA (main)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000008A - 0000008F (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   SPI_Init_HW
           LOCAL                   ADDRESS         
           =====                   =======         
           SPI_Init_SPI1::?relay   0000008A 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000090 - 00000095 (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   SPI_Send_Byte
           LOCAL                   ADDRESS         
           =====                   =======         
           HWSPI_Send_Byte::?relay
                                   00000090 

    *************************************************************************

  FILE NAME : C:\Users\31770\Documents\CC2530\project\Debug\Obj\main.r51
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000090 - 00000090 (0x1 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   main
                                                   sendCMD
                                                   sendDATA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   00000090 
           LOCAL                   ADDRESS         
           =====                   =======         
           P1                      00000090 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009E - 0000009E (0x1 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONSTA               0000009E 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A0 - 000000A0 (0x1 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   displayInit
                                                   sendCMD
                                                   sendDATA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P2                   000000A0 
           LOCAL                   ADDRESS         
           =====                   =======         
           P2                      000000A0 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C6 - 000000C6 (0x1 bytes), align: 0
  Segment part 4. ROOT        Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONCMD               000000C6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FE - 000000FE (0x1 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   displayInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   000000FE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FF - 000000FF (0x1 bytes), align: 0
  Segment part 6. ROOT        Intra module refs:   displayInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   000000FF 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000001C4 - 000001FF (0x3c bytes), align: 0
  Segment part 14.            Intra module refs:   HAL_Delay::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HAL_Delay               000001C4 
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00000200 - 00000218 (0x19 bytes), align: 0
  Segment part 16.            Intra module refs:   sendCMD::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sendCMD                 00000200 
               calls direct
               XSTACK = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00000219 - 00000231 (0x19 bytes), align: 0
  Segment part 18.            Intra module refs:   sendDATA::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sendDATA                00000219 
               calls direct
               XSTACK = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00000232 - 00000264 (0x33 bytes), align: 0
  Segment part 20.            Intra module refs:   displayInit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           displayInit             00000232 
               calls direct
               XSTACK = 00000000 ( 00000004 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000200 - 00000203 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   displayInit
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00000265 - 0000029A (0x36 bytes), align: 0
  Segment part 22.            Intra module refs:   displayClear::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           displayClear            00000265 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000029B - 00000349 (0xaf bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    0000029B        ?call_main (?cmain)
               calls direct
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000007A - 0000007D (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000096 - 0000009B (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           HAL_Delay::?relay       00000096 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000009C - 000000A1 (0x6 bytes), align: 0
  Segment part 17.            Intra module refs:   displayClear
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sendCMD::?relay         0000009C 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000000A2 - 000000A7 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   displayClear
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sendDATA::?relay        000000A2 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000000A8 - 000000AD (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           displayInit::?relay     000000A8 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000000AE - 000000B3 (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           displayClear::?relay    000000AE 

    *************************************************************************

  FILE NAME : D:\Program Files (x86)\IAR Systems\Embedded Workbench 8.0\8051\LIB\DLIB\dl-pli-blxd-1e16x01n.r51
  LIBRARY MODULE, NAME : ?__dbg_break

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00000440 - 00000442 (0x3 bytes), align: 0
  Segment part 6.             Intra module refs:   __DebugBreak::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __DebugBreak            00000440 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000000B4 - 000000B9 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __DebugBreak::?relay    000000B4        __exit (?__exit)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000040E - 00000431 (0x24 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  0000040E        Segment part 10 (?cexit)
               calls direct
               XSTACK = 00000000 ( 0000000B )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cexit

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000003, align: 0
  Segment part 5.             Intra module refs:   _exit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   00000003 
               calls direct
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000003 - 0000000D (0xb bytes), align: 0
  Segment part 10.            Intra module refs:   _exit
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000000BA - 000000BF (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit::?relay           000000BA        exit (?exit)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cmain

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 0000000E, align: 0
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cmain                  0000000E        Segment part 13 (CSTARTUP)
               calls direct
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000000E - 00000033 (0x26 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_I          0000000E        Segment part 12 (main)
    -------------------------------------------------------------------------
DIFUNCT
  Relative segment, address: CODE 000001C4, align: 0
  Segment part 38. ROOT 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000034 - 00000049 (0x16 bytes), align: 0
  Segment part 40.            Intra module refs:   ?cmain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_main              00000034 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : CSTARTUP

  SEGMENTS IN THE MODULE
  ======================
REGISTERS
  Relative segment, address: DATA 00000000, align: 0
  Segment part 0.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?REGISTERS              00000000 
    -------------------------------------------------------------------------
ISTACK
  Relative segment, address: IDATA 000000C0, align: 0
  Segment part 1.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ISTACK_START           000000C0 
    -------------------------------------------------------------------------
XSTACK
  Relative segment, address: XDATA 00000001, align: 0
  Segment part 3.             Intra module refs:   ?RESET_XSP
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_START           00000001 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000002 (0x3 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000004A - 0000004F (0x6 bytes), align: 0
  Segment part 6. ROOT        Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         0000004A        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET_SP               0000004D 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000050 - 00000055 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_XSP              00000050        ?XSP (VIRTUAL_REGISTERS)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000056 - 00000058 (0x3 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_CODE_BANK        00000056        Absolute parts (?BANKED_CODE_SUPPORT)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000059 - 0000005B (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   Absolute parts

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : VIRTUAL_REGISTERS

  SEGMENTS IN THE MODULE
  ======================
BREG
  Relative segment, address: BIT 00000020.0 - 00000020.7 (0x8 bits), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?B0                     00000020.0      Absolute parts (CSTARTUP)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 00000008 - 00000008 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   ?V1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V0                     00000008        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   SPI_Send_Byte (cc2530_hal_SPI)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 00000009 - 00000009 (0x1 bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V1                     00000009        SPI_Send_Byte (cc2530_hal_SPI)
    -------------------------------------------------------------------------
XSP
  Relative segment, address: DATA 0000000A - 0000000B (0x2 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSP                    0000000A        ?ALLOC_XSTACK8 (?ALLOC_XSTACK8)
                                                   ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?DEALLOC_XSTACK8 (?DEALLOC_XSTACK8)
                                                   ?RESET_XSP (CSTARTUP)
                                                   __exit (?__exit)
                                                   displayInit (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exit

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00000432 - 0000043F (0xe bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    00000432        ?call_main (?cmain)
               calls direct
               ISTACK = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_CODE_SUPPORT

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 0000005C - 00000079 (0x1e bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BCALL_FF               0000005C        ?call_main (?cmain)
                                                   Segment part 10 (?cexit)
           ?BRET_FF                00000062        ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   HWSPI_Send_Byte (cc2530_hal_SPI)
                                                   SPI_Init_HW (cc2530_hal_SPI)
                                                   SPI_Init_SPI1 (cc2530_hal_SPI)
                                                   __DebugBreak (?__dbg_break)
                                                   displayInit (main)
                                                   exit (?exit)
           ?BDISPATCH_FF           00000065        HAL_Delay::?relay (main)
                                                   HWSPI_Send_Byte::?relay (cc2530_hal_SPI)
                                                   SPI_Init_HW::?relay (cc2530_hal_SPI)
                                                   SPI_Init_SPI1::?relay (cc2530_hal_SPI)
                                                   SPI_Send_Byte::?relay (cc2530_hal_SPI)
                                                   __DebugBreak::?relay (?__dbg_break)
                                                   _exit::?relay (?cexit)
                                                   displayClear::?relay (main)
                                                   displayInit::?relay (main)
                                                   sendCMD::?relay (main)
                                                   sendDATA::?relay (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000000C0 - 000000E0 (0x21 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_XDATA
                                   000000C0        displayInit (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000000E1 - 000000F6 (0x16 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ALLOC_XSTACK8          000000E1        __exit (?__exit)
                                                   displayInit (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DEALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000000F7 - 00000111 (0x1b bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DEALLOC_XSTACK8        000000F7        displayInit (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000112 - 0000017D (0x6c bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_ENTER_XDATA     00000112        HAL_Delay (main)
                                                   SPI_Send_Byte (cc2530_hal_SPI)
                                                   __exit (?__exit)
                                                   displayClear (main)
                                                   sendCMD (main)
                                                   sendDATA (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000017E - 000001C3 (0x46 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_LEAVE_XDATA     0000017E        HAL_Delay (main)
                                                   SPI_Send_Byte (cc2530_hal_SPI)
                                                   displayClear (main)
                                                   sendCMD (main)
                                                   sendDATA (main)




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000002           3   com    0
CSTART               CODE          00000003 - 00000079          77   rel    0
PDATA_ID             CODE               0000007A                     dse    0
IXDATA_ID            CODE               0000007A                     dse    0
IDATA_ID             CODE               0000007A                     dse    0
BDATA_ID             CODE               0000007A                     dse    0
BIT_ID               CODE               0000007A                     dse    0
DATA_ID              CODE               0000007A                     dse    0
XDATA_ID             CODE          0000007A - 0000007D           4   rel    0
BANK_RELAYS          CODE          0000007E - 000000BF          42   rel    0
RCODE                CODE          000000C0 - 000001C3         104   rel    0
DIFUNCT              CODE               000001C4                     rel    0
<BANKED_CODE> 1      CODE          000001C4 - 00000442         27F   rel    0
REGISTERS            DATA          00000000 - 00000007           8   rel    0
VREG                 DATA          00000008 - 00000009           2   rel    0
PSP                  DATA               0000000A                     dse    0
XSP                  DATA          0000000A - 0000000B           2   rel    0
BREG                 BIT        00000020.0  -  00000020.7        8   rel    0
SFR_AN               DATA          00000090 - 00000090           1   rel    0
                     DATA          0000009E - 0000009E           1 
                     DATA          000000A0 - 000000A0           1 
                     DATA          000000C6 - 000000C6           1 
                     DATA          000000F1 - 000000F1           1 
                     DATA          000000F4 - 000000F5           2 
                     DATA          000000F8 - 000000FA           3 
                     DATA          000000FC - 000000FC           1 
                     DATA          000000FE - 000000FF           2 
XSTACK               XDATA         00000001 - 000001FF         1FF   rel    0
XDATA_Z              XDATA              00000200                     dse    0
XDATA_I              XDATA         00000200 - 00000203           4   rel    0
ISTACK               IDATA         000000C0 - 000000FF          40   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 1 091 bytes of CODE  memory
    12 bytes of DATA  memory (+ 13 absolute )
   515 bytes of XDATA memory
    64 bytes of IDATA memory
     8 bits  of BIT   memory

Errors: none
Warnings: none

